import logging
import random

from aiogram import Bot, Dispatcher, types, executor

API_TOKEN = '6650827858:AAGgNXGMly3ox4qQFz0Ud5dZXcdF0TIJgPs'

admin_id = "6420712889"

# Configure logging
logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

is_raffle_start = False
raffle_members = []


def get_blacklist():
    blacklist = open("blacklist.txt ").readlines()
    for i in range(len(blacklist)):
        blacklist[i] = blacklist[i].replace("\n", "")

    return blacklist


@dp.message_handler(commands=['start'])
async def on_start(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text="*** –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –±–æ—Ç '–ü—Ä–µ–¥–ª–æ–∂–∫–∞ 2107' *** \n\n–ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω—ã",
                           parse_mode="Markdown")


@dp.message_handler(commands=['help'])
async def on_start(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text="*** –í–Ω–∏–º–∞–Ω–∏–µ !!! *** \n\n–ë–æ—Ç –≤ —Å—Ç–∞–¥–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫, —Ç–∞–∫ —á—Ç–æ –µ—Å–ª–∏ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É, –Ω–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞: \n\n@setta1a",
                           parse_mode="Markdown")


@dp.message_handler(commands=['raffle'])
async def on_start(message: types.Message):
    text = message.text.replace("/raffle", "").strip()
    global is_raffle_start
    global raffle_members
    if text == "start":
        raffle_members = []
        if message.chat.id != int(admin_id):
            await bot.send_message(chat_id=message.chat.id,
                                   text="*** –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ ***",
                                   parse_mode="Markdown")
        else:
            is_raffle_start = True
    elif text == "end":
        if message.chat.id != int(admin_id):
            await bot.send_message(chat_id=message.chat.id,
                                   text="*** –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ ***",
                                   parse_mode="Markdown")
        else:
            is_raffle_start = False
    elif text == "results":
        if message.chat.id != int(admin_id):
            await bot.send_message(chat_id=message.chat.id,
                                   text="*** –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ ***",
                                   parse_mode="Markdown")
        else:
            winner = random.choice(
                                       raffle_members)
            await bot.send_message(chat_id=admin_id,
                                   text="*** –ü–æ–±–µ–¥–∏—Ç–µ–ª—å —Ä–æ–∑—ã–≥—Ä—ã—à–∞: *** \n\nhttps://web.telegram.org/k/#" + str(winner),
                                   parse_mode="Markdown")
            await bot.send_message(chat_id=winner,
                                   text="*** –¢—ã –≤—ã–∏–≥—Ä–∞–ª(–∞) –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!!! ***",
                                   parse_mode="Markdown")

    elif not text:
        if is_raffle_start:
            if message.chat.id not in raffle_members:
                raffle_members.append(message.chat.id)
                await bot.send_message(chat_id=message.chat.id,
                                       text="*** –í—ã –ø—Ä–∏–Ω—è–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ ***",
                                       parse_mode="Markdown")
            else:
                await bot.send_message(chat_id=message.chat.id,
                                       text="*** –í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ ***",
                                       parse_mode="Markdown")

        else:
            await bot.send_message(chat_id=message.chat.id,
                                   text="*** –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ***",
                                   parse_mode="Markdown")



@dp.message_handler(commands=['blacklist'])
async def on_start(message: types.Message):
    print(message.chat.id, admin_id)
    if int(message.chat.id) == int(admin_id):
        text = message.text.replace("/blacklist", "").strip()

        if not text:
            blacklist = open("blacklist.txt")
            mess = ""
            for user in blacklist.readlines():
                mess += user
            await bot.send_message(admin_id, text="–ß–µ—Ä–Ω—ã–π –ø–∏—Å–æ–∫:  \n" + mess)
            blacklist.close()

        else:
            blacklist = open("blacklist.txt", "a")
            blacklist.write(text + "\n")
            blacklist.close()

    else:
        await bot.send_message(message.chat.id, text="–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞.")


@dp.message_handler(content_types=["text", "photo", "video"])
async def check_messages(message: types.Message):
    if "@" + message["from"].username not in get_blacklist():
        if message.text:
            await bot.send_message(admin_id,
                                   "üì® *** –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ *** \n\n" + message.text,
                                   parse_mode="Markdown")
        if message.photo:
            print(message.photo)
            if message.caption:
                await bot.send_photo(admin_id,
                                     message.photo[-1].file_id,
                                     caption="üì® *** –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ *** \n\n" + message.caption,
                                     parse_mode="Markdown")
            else:
                await bot.send_photo(admin_id,
                                     message.photo[-1].file_id,
                                     caption="üì® *** –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ *** \n",
                                     parse_mode="Markdown")
        if message.video:
            print(message.video)
            if message.caption:
                await bot.send_video(admin_id,
                                     message.video.file_id,
                                     caption="üì® *** –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ *** \n\n" + message.caption,
                                     parse_mode="Markdown")
            else:
                await bot.send_video(admin_id,
                                     message.video.file_id,
                                     caption="üì® *** –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ *** \n",
                                     parse_mode="Markdown")

        await bot.send_message(message.chat.id, text="*** –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ***", parse_mode="Markdown")
    else:
        await bot.send_message(message.chat.id, text="*** –í—ã –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ ***", parse_mode="Markdown")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
